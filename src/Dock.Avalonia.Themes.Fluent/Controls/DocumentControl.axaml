<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:dmc="using:Dock.Model.Controls"
                    xmlns:core="using:Dock.Model.Core"
                    xmlns:controls="using:Dock.Avalonia.Controls"
                    xmlns:converters="using:Dock.Avalonia.Converters"
                    x:CompileBindings="True"
                    x:DataType="dmc:IDocumentDock">
  <Design.PreviewWith>
    <DocumentControl Width="300" Height="400" />
  </Design.PreviewWith>

  <ControlTheme x:Key="DocumentCloseButtonTheme" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="Width" Value="14" />
    <Setter Property="Height" Value="14" />
    <Setter Property="Background" Value="Transparent" />
    <Style Selector="^:pointerover">
      <Setter Property="Background" Value="{DynamicResource DockApplicationAccentBrushHigh}" />
    </Style>
  </ControlTheme>

  <ControlTheme x:Key="{x:Type DocumentControl}" TargetType="DocumentControl">

    <Setter Property="(DockProperties.IsDragEnabled)" Value="{Binding CanDrag}" />
    <Setter Property="(DockProperties.IsDropEnabled)" Value="{Binding CanDrop}" />
    <Setter Property="(DockProperties.DockGroup)" Value="{Binding DockGroup}" />
    <Setter Property="TabsLayout" Value="{Binding TabsLayout, Mode=TwoWay}" />
    <Setter Property="CloseButtonTheme" Value="{DynamicResource DocumentCloseButtonTheme}" />

    <Setter Property="IconTemplate">
      <DataTemplate DataType="core:IDockable">
        <Panel />
      </DataTemplate>
    </Setter>

    <Setter Property="HeaderTemplate">
      <DataTemplate DataType="core:IDockable">
        <TextBlock Text="{Binding Title}" 
                   VerticalAlignment="Center"
                   Padding="2"  />
      </DataTemplate>
    </Setter>

    <Setter Property="ModifiedTemplate">
      <DataTemplate DataType="core:IDockable">
        <TextBlock VerticalAlignment="Center"
                   Text="*"
                   Margin="0,0,2,0" />
      </DataTemplate>
    </Setter>

    <Setter Property="CloseTemplate">
      <DataTemplate DataType="core:IDockable">
        <Button Command="{Binding Owner.Factory.CloseDockable}"
                CommandParameter="{Binding}"
                Theme="{Binding $parent[DocumentControl].CloseButtonTheme}">
          <Button.IsVisible>
            <MultiBinding Converter="{x:Static BoolConverters.And}">
              <Binding Path="CanClose" />
              <MultiBinding Converter="{x:Static converters:CanRemoveDockableConverter.Instance}">
                <Binding Path="((core:IDock)Owner).CanCloseLastDockable" FallbackValue="{x:True}" />
                <Binding Path="((core:IDock)Owner).VisibleDockables.Count" FallbackValue="0" />
              </MultiBinding>
            </MultiBinding>
          </Button.IsVisible>

          <Path x:Name="PART_ClosePath"
                Classes.selected="{Binding $parent[DocumentTabStripItem].IsSelected}"
                Classes.pointerover="{Binding $parent[DocumentTabStripItem].IsPointerOver}">
            <Path.Styles>
              <Style Selector="Path">
                <Setter Property="Margin" Value="2" />
                <Setter Property="Stretch" Value="Uniform" />
                <Setter Property="UseLayoutRounding" Value="False" />
                <Setter Property="Data" Value="{DynamicResource DockIconCloseGeometry}" />
              </Style>
              <Style Selector="Path.selected">
                <Setter Property="Fill" Value="{DynamicResource DockApplicationAccentForegroundBrush}" />
              </Style>

              <Style Selector="Path.pointerover">
                <Setter Property="Fill" Value="{DynamicResource DockApplicationAccentForegroundBrush}" />
              </Style>
            </Path.Styles>
          </Path>
        </Button>
      </DataTemplate>
    </Setter>

    <Setter Property="Template">
      <ControlTemplate>
        <DockPanel x:Name="PART_DockPanel"
                   DockProperties.IsDropArea="True"
                   DockProperties.IsDockTarget="True"
                   Background="Transparent"
                   ZIndex="1">
          <DocumentTabStrip x:Name="PART_TabStrip"
                            IsVisible="{Binding Presentation, Converter={x:Static converters:EnumEqualsConverter.Instance}, ConverterParameter=Tabs}"
                            ItemsSource="{Binding VisibleDockables}"
                            SelectedItem="{Binding ActiveDockable, Mode=TwoWay}"
                            CanCreateItem="{Binding CanCreateDocument}"
                            IsActive="{TemplateBinding IsActive}"
                            Orientation="{Binding TabsLayout, Converter={x:Static DocumentTabOrientationConverter.Instance}}"
                            DockPanel.Dock="{Binding TabsLayout, Converter={x:Static DocumentTabDockConverter.Instance}}"
                            DockProperties.IsDropArea="True"
                            DockProperties.DockAdornerHost="{Binding #PART_DockPanel}">
            <DocumentTabStrip.Styles>
              <Style Selector="DocumentTabStripItem">
                <Setter Property="IsActive" Value="{Binding $parent[DocumentTabStrip].IsActive}" />
              </Style>
            </DocumentTabStrip.Styles>
          </DocumentTabStrip>
          <Grid x:Name="PART_Grid"
                IsVisible="{Binding #PART_TabStrip.IsVisible}" />
          <Border x:Name="PART_Border"
                  IsVisible="{Binding Presentation, Converter={x:Static converters:EnumEqualsConverter.Instance}, ConverterParameter=Tabs}">
            <DockableControl DataContext="{Binding ActiveDockable}"
                             TrackingMode="Visible">
              <ContentControl x:Name="PART_ContentPresenter"
                              Content="{Binding}"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Stretch">
                <ContentControl.ContentTemplate>
                  <ControlRecyclingDataTemplate Parent="{Binding #PART_ContentPresenter}" />
                </ContentControl.ContentTemplate>
              </ContentControl>
            </DockableControl>
          </Border>
          <ItemsControl x:Name="PART_MdiItems"
                        DockProperties.IsDropArea="True"
                        Background="Transparent"
                        IsVisible="{Binding Presentation, Converter={x:Static converters:EnumEqualsConverter.Instance}, ConverterParameter=Mdi}"
                        ItemsSource="{Binding VisibleDockables}">
            <ItemsControl.ItemTemplate>
              <DataTemplate>
                <controls:MdiDocumentItem Content="{Binding}" />
              </DataTemplate>
            </ItemsControl.ItemTemplate>
            <ItemsControl.ItemsPanel>
              <ItemsPanelTemplate>
                <Canvas />
              </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.Styles>
              <Style Selector="ItemsControl /template/ ContentPresenter">
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="VerticalAlignment" Value="Top" />
              </Style>
            </ItemsControl.Styles>
          </ItemsControl>
        </DockPanel>
      </ControlTemplate>
    </Setter>
 
    <Style Selector="^[TabsLayout=Top]/template/ Grid#PART_Grid">
      <Setter Property="DockPanel.Dock" Value="Top" />
      <Setter Property="Width" Value="NaN" />
      <Setter Property="Height" Value="2" />
    </Style>
    
    <Style Selector="^[TabsLayout=Left]/template/ Grid#PART_Grid">
      <Setter Property="DockPanel.Dock" Value="Left" />
      <Setter Property="Width" Value="2" />
      <Setter Property="Height" Value="NaN" />
    </Style>
    
    <Style Selector="^[TabsLayout=Right]/template/ Grid#PART_Grid">
      <Setter Property="DockPanel.Dock" Value="Right" />
      <Setter Property="Width" Value="2" />
      <Setter Property="Height" Value="NaN" />
    </Style>

    <Style Selector="^/template/ Grid#PART_Grid">
      <Setter Property="Background" Value="{DynamicResource DockThemeBorderLowBrush}" />
    </Style>

    <Style Selector="^:active /template/ Grid#PART_Grid">
      <Setter Property="Background" Value="{DynamicResource DockApplicationAccentBrushLow}" />
    </Style>

    <Style Selector="^/template/ Border#PART_Border">
      <Setter Property="BorderBrush" Value="{DynamicResource DockThemeBorderLowBrush}" />
      <Setter Property="BorderThickness" Value="1,1,1,1" />
    </Style>

  </ControlTheme>

</ResourceDictionary>
